/* This code is copyright Articulate Software (c) 2016.  Some
portions copyright Teknowledge (c) 2003 and reused under the terms of
the GNU license.  This software is released under the GNU Public
License <http://www.gnu.org/copyleft/gpl.html>.  Users of this code
also consent, by use of this code, to credit Articulate Software and
Teknowledge in any writings, briefings, publications, presentations,
or other representations of any software which incorporates, builds
on, or uses this code.
 */

package com.articulate.calendar.gui;

import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import org.joda.time.LocalDate;

/**
 * CalendarFrame is the main window of the application.
 * @author Jeff Thompson, jeff@thefirst.org
 */
public class CalendarFrame extends javax.swing.JFrame {

  /**
   * Creates a CalendarFrame.
   */
  public CalendarFrame()
  {
    super("Calendar");
    initComponents();

    // Initialize the day panel grid. A month has up to six rows of weeks.
    for (int iWeek = 0; iWeek < 6; ++iWeek) {
      ArrayList<DayPanel> week = new ArrayList<>();
      daysPanelGrid_.add(week);

      for (int iDay = 0; iDay < 7; ++iDay) {
        DayPanel dayPanel = new DayPanel();
        week.add(dayPanel);
        daysPanel_.add(dayPanel.panel);
      }
    }

    // Initialize the headers.
    for (int i = 0; i < 7; ++i) {
      JLabel header = new JLabel();
      daysPanelHeaders_.add(header);

      header.setBorder(BorderFactory.createLineBorder(DayPanel.borderColor));
      header.setHorizontalAlignment(SwingConstants.CENTER);
      header.setFont(new Font("Tahoma", 0, 11));
      // Add to whatever is the parent of daysPanel_.
      daysPanel_.getParent().add(header);
    }

    setUpDaysPanel();
    pack();
  }

  /**
   * Set up the dayPanelGrid_ based on selectedDate_.
   */
  private final void
  setUpDaysPanel()
  {
    daysPanelLabel_.setText(selectedDate_.toString("MMMM y"));

    // Date object months starts at 0.
    LocalDate firstDayOfMonth = LocalDate.fromDateFields
      (new Date(selectedDate_.getYear(), selectedDate_.getMonthOfYear() - 1, 1));
    LocalDate lastDayOfLastMonth = firstDayOfMonth.plusDays(-1);
    LocalDate firstDayOfNextMonth = firstDayOfMonth.plusMonths(1);
    LocalDate lastDayOfMonth = firstDayOfNextMonth.plusDays(-1);

    LocalDate date = firstDayOfMonth;
    // Back up to the start of the week.
    while (date.getDayOfWeek() != startOfWeek_)
      date = date.plusDays(-1);

    // We'll adjust nWeekRows_ below.
    nWeekRows_ = 6;
    for (int iWeek = 0; iWeek < 6; ++iWeek) {
      ArrayList<DayPanel> week = daysPanelGrid_.get(iWeek);

      for (int iDay = 0; iDay < 7; ++iDay) {
        DayPanel dayPanel = week.get(iDay);

        if (iWeek == 0)
          // Set the header using DateTime.toString which can be localized.
          // Debug: Does DateTime have a bug? Need to adjust.
          daysPanelHeaders_.get(iDay).setText(dayOfWeek_[date.getDayOfWeek()]);

        if (iWeek >= nWeekRows_)
          dayPanel.panel.setVisible(false);
        else {
          dayPanel.panel.setVisible(true);

          // Set the label.
          if (date.equals(lastDayOfLastMonth) ||
              date.equals(firstDayOfMonth) ||
              date.equals(lastDayOfMonth) ||
              date.equals(firstDayOfNextMonth))
            // Include the month.
            dayPanel.label.setText(date.toString("MMM d"));
          else
            dayPanel.label.setText("" + date.getDayOfMonth());

          if (date.equals(lastDayOfMonth))
            // This is the last row.
            nWeekRows_ = iWeek + 1;
        }

        date = date.plusDays(1);
      }
    }

    // Set the day panel sizes and locations.
    daysPanel_ComponentResized(null);
  }

  /**
   * A DayPanel holds the main panel for a day plus its contained components.
   */
  private static class DayPanel {
    public DayPanel()
    {
      panel.setBorder(BorderFactory.createLineBorder(borderColor));

      label.setForeground(new Color(100, 100, 100));
      label.setVerticalAlignment(SwingConstants.TOP);
      label.setLocation(1, 0);
      label.setSize(50, 20);
      panel.add(label);
    }

    public final JPanel panel = new JPanel(null);
    public final JLabel label = new JLabel();
    public static final Color borderColor = new Color(200, 200, 200);
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {

    topHorizontalSplitPane_ = new javax.swing.JSplitPane();
    calendarControlsPanel_ = new javax.swing.JPanel();
    calendarAndTasksHorizontalSplitPane_ = new javax.swing.JSplitPane();
    tasksPanel_ = new javax.swing.JPanel();
    eventsAndCalendarVerticalSplitPane_ = new javax.swing.JSplitPane();
    calendarPanel_ = new javax.swing.JPanel();
    decrementButton_ = new javax.swing.JButton();
    todayButton_ = new javax.swing.JButton();
    incrementButton_ = new javax.swing.JButton();
    daysPanelLabel_ = new javax.swing.JLabel();
    daysPanel_ = new javax.swing.JPanel();
    eventsPanel_ = new javax.swing.JPanel();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    topHorizontalSplitPane_.setDividerLocation(100);

    javax.swing.GroupLayout calendarControlsPanel_Layout = new javax.swing.GroupLayout(calendarControlsPanel_);
    calendarControlsPanel_.setLayout(calendarControlsPanel_Layout);
    calendarControlsPanel_Layout.setHorizontalGroup(
      calendarControlsPanel_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 99, Short.MAX_VALUE)
    );
    calendarControlsPanel_Layout.setVerticalGroup(
      calendarControlsPanel_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 687, Short.MAX_VALUE)
    );

    topHorizontalSplitPane_.setLeftComponent(calendarControlsPanel_);

    calendarAndTasksHorizontalSplitPane_.setDividerLocation(800);
    calendarAndTasksHorizontalSplitPane_.addComponentListener(new java.awt.event.ComponentAdapter()
    {
      public void componentResized(java.awt.event.ComponentEvent evt)
      {
        calendarAndTasksHorizontalSplitPane_ComponentResized(evt);
      }
    });

    javax.swing.GroupLayout tasksPanel_Layout = new javax.swing.GroupLayout(tasksPanel_);
    tasksPanel_.setLayout(tasksPanel_Layout);
    tasksPanel_Layout.setHorizontalGroup(
      tasksPanel_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 150, Short.MAX_VALUE)
    );
    tasksPanel_Layout.setVerticalGroup(
      tasksPanel_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 685, Short.MAX_VALUE)
    );

    calendarAndTasksHorizontalSplitPane_.setRightComponent(tasksPanel_);

    eventsAndCalendarVerticalSplitPane_.setDividerLocation(100);
    eventsAndCalendarVerticalSplitPane_.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

    decrementButton_.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    decrementButton_.setText("<");
    decrementButton_.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        decrementButton_ActionPerformed(evt);
      }
    });

    todayButton_.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    todayButton_.setText("Today");
    todayButton_.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        todayButton_ActionPerformed(evt);
      }
    });

    incrementButton_.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    incrementButton_.setText(">");
    incrementButton_.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        incrementButton_ActionPerformed(evt);
      }
    });

    daysPanelLabel_.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    daysPanelLabel_.setText("January 2016");

    daysPanel_.addComponentListener(new java.awt.event.ComponentAdapter()
    {
      public void componentResized(java.awt.event.ComponentEvent evt)
      {
        daysPanel_ComponentResized(evt);
      }
    });

    javax.swing.GroupLayout daysPanel_Layout = new javax.swing.GroupLayout(daysPanel_);
    daysPanel_.setLayout(daysPanel_Layout);
    daysPanel_Layout.setHorizontalGroup(
      daysPanel_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 0, Short.MAX_VALUE)
    );
    daysPanel_Layout.setVerticalGroup(
      daysPanel_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 524, Short.MAX_VALUE)
    );

    javax.swing.GroupLayout calendarPanel_Layout = new javax.swing.GroupLayout(calendarPanel_);
    calendarPanel_.setLayout(calendarPanel_Layout);
    calendarPanel_Layout.setHorizontalGroup(
      calendarPanel_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(calendarPanel_Layout.createSequentialGroup()
        .addGap(5, 5, 5)
        .addComponent(decrementButton_)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(todayButton_)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(incrementButton_)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(daysPanelLabel_, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(507, Short.MAX_VALUE))
      .addComponent(daysPanel_, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    calendarPanel_Layout.setVerticalGroup(
      calendarPanel_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(calendarPanel_Layout.createSequentialGroup()
        .addGap(5, 5, 5)
        .addGroup(calendarPanel_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(decrementButton_)
          .addComponent(todayButton_)
          .addComponent(incrementButton_)
          .addComponent(daysPanelLabel_))
        .addGap(27, 27, 27)
        .addComponent(daysPanel_, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    eventsAndCalendarVerticalSplitPane_.setBottomComponent(calendarPanel_);

    javax.swing.GroupLayout eventsPanel_Layout = new javax.swing.GroupLayout(eventsPanel_);
    eventsPanel_.setLayout(eventsPanel_Layout);
    eventsPanel_Layout.setHorizontalGroup(
      eventsPanel_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 797, Short.MAX_VALUE)
    );
    eventsPanel_Layout.setVerticalGroup(
      eventsPanel_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 99, Short.MAX_VALUE)
    );

    eventsAndCalendarVerticalSplitPane_.setLeftComponent(eventsPanel_);

    calendarAndTasksHorizontalSplitPane_.setLeftComponent(eventsAndCalendarVerticalSplitPane_);

    topHorizontalSplitPane_.setRightComponent(calendarAndTasksHorizontalSplitPane_);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(topHorizontalSplitPane_)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(topHorizontalSplitPane_)
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void daysPanel_ComponentResized(java.awt.event.ComponentEvent evt)//GEN-FIRST:event_daysPanel_ComponentResized
  {//GEN-HEADEREND:event_daysPanel_ComponentResized
    if (nWeekRows_ == 0)
      // Not initialized yet.
      return;

    int width = daysPanel_.getSize().width;
    int height = daysPanel_.getSize().height;
    if (width <= 0 || height <= 0)
      // We don't expect this to happen. Nothing to show.
      return;

    int nDaysInWeek = 7;
    int dayPanelWidth = width / nDaysInWeek;
    int dayPanelHeight = height / nWeekRows_;

    // Resize all visible day panels.
    for (int iWeek = 0; iWeek < nWeekRows_; ++iWeek) {
      ArrayList<DayPanel> week = daysPanelGrid_.get(iWeek);

      for (int iDay = 0; iDay < 7; ++iDay) {
        DayPanel dayPanel = week.get(iDay);
        dayPanel.panel.setSize(dayPanelWidth, dayPanelHeight);
        dayPanel.panel.setLocation(dayPanelWidth * iDay, dayPanelHeight * iWeek);
      }
    }

    // Resize the headers.
    int headerHeight = 20;
    int headerY = daysPanel_.getLocation().y - headerHeight;
    int firstHeaderX = daysPanel_.getLocation().x;
    for (int i = 0; i < 7; ++i) {
      JLabel header = daysPanelHeaders_.get(i);
      header.setSize(dayPanelWidth, headerHeight);
      header.setLocation(firstHeaderX + dayPanelWidth * i, headerY);
    }
  }//GEN-LAST:event_daysPanel_ComponentResized

  private void decrementButton_ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_decrementButton_ActionPerformed
  {//GEN-HEADEREND:event_decrementButton_ActionPerformed
    selectedDate_ = selectedDate_.plusMonths(-1);
    setUpDaysPanel();
  }//GEN-LAST:event_decrementButton_ActionPerformed

  private void incrementButton_ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_incrementButton_ActionPerformed
  {//GEN-HEADEREND:event_incrementButton_ActionPerformed
    selectedDate_ = selectedDate_.plusMonths(1);
    setUpDaysPanel();
  }//GEN-LAST:event_incrementButton_ActionPerformed

  private void todayButton_ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_todayButton_ActionPerformed
  {//GEN-HEADEREND:event_todayButton_ActionPerformed
    selectedDate_ = LocalDate.now();
    setUpDaysPanel();
  }//GEN-LAST:event_todayButton_ActionPerformed

  private void calendarAndTasksHorizontalSplitPane_ComponentResized(java.awt.event.ComponentEvent evt)//GEN-FIRST:event_calendarAndTasksHorizontalSplitPane_ComponentResized
  {//GEN-HEADEREND:event_calendarAndTasksHorizontalSplitPane_ComponentResized
    // On the first call, we just save the value.
    if (calendarAndTasksHorizontalSplitPanePreviousWidth_ >= 0) {
      int deltaWidth = calendarAndTasksHorizontalSplitPane_.getSize().width -
        calendarAndTasksHorizontalSplitPanePreviousWidth_;
      int newDividerLocation =
        calendarAndTasksHorizontalSplitPane_.getDividerLocation() + deltaWidth;
      calendarAndTasksHorizontalSplitPane_.setDividerLocation(newDividerLocation);
    }

    calendarAndTasksHorizontalSplitPanePreviousWidth_ =
      calendarAndTasksHorizontalSplitPane_.getSize().width;
  }//GEN-LAST:event_calendarAndTasksHorizontalSplitPane_ComponentResized

  /**
   * @param args the command line arguments
   */
  public static void main(String args[])
  {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(CalendarFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(CalendarFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(CalendarFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(CalendarFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run()
      {
        new CalendarFrame().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JSplitPane calendarAndTasksHorizontalSplitPane_;
  private javax.swing.JPanel calendarControlsPanel_;
  private javax.swing.JPanel calendarPanel_;
  private javax.swing.JLabel daysPanelLabel_;
  private javax.swing.JPanel daysPanel_;
  private javax.swing.JButton decrementButton_;
  private javax.swing.JSplitPane eventsAndCalendarVerticalSplitPane_;
  private javax.swing.JPanel eventsPanel_;
  private javax.swing.JButton incrementButton_;
  private javax.swing.JPanel tasksPanel_;
  private javax.swing.JButton todayButton_;
  private javax.swing.JSplitPane topHorizontalSplitPane_;
  // End of variables declaration//GEN-END:variables
  private final ArrayList<ArrayList<DayPanel>> daysPanelGrid_ = new ArrayList();
  private final ArrayList<JLabel> daysPanelHeaders_ = new ArrayList();
  private final int startOfWeek_ = 2;
  private LocalDate selectedDate_ = LocalDate.now();
  private int nWeekRows_ = 0;
  private int calendarAndTasksHorizontalSplitPanePreviousWidth_ = -1;
  // These need to be localized. LocalDate.toString("c") isn't supported and
  // LocalDate("EEEE") seems to return the wrong value.
  private static String[] dayOfWeek_ = new String[]
    { null, "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" };
}
